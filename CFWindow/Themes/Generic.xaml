<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:CFWindow">

    <SolidColorBrush x:Key="Button.Static.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="Button.Static.Foreground" Color="#FF282828"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF415A71"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FF3665B3"/>
    <SolidColorBrush x:Key="Button.MouseOver.Foreground" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="Button.MouseDown.Background" Color="#FF3D6099"/>
    <SolidColorBrush x:Key="Button.MouseDown.Foreground" Color="#FFFFFFFF"/>

    <Style TargetType="{x:Type Button}" x:Key="WindowButtonStyle">
        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        <Setter Property="Foreground" Value="{StaticResource Button.Static.Foreground}"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Margin="0" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource Button.MouseOver.Background}"/>
                <Setter Property="Foreground" Value="{StaticResource Button.MouseOver.Foreground}"/>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource Button.MouseDown.Background}"/>
                <Setter Property="Foreground" Value="{StaticResource Button.MouseDown.Foreground}"/>
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource Button.Disabled.Foreground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <SolidColorBrush x:Key="CloseButton.Static.Background" Color="#FFC75050"/>
    <SolidColorBrush x:Key="CloseButton.Static.Foreground" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="CloseButton.MouseOver.Background" Color="#FFE04343"/>
    <SolidColorBrush x:Key="CloseButton.MouseOver.Foreground" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="CloseButton.MouseDown.Background" Color="#FF993D3D"/>
    <SolidColorBrush x:Key="CloseButton.MouseDown.Foreground" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="CloseButton.Inactive.Background" Color="#FFBCBCBC"/>

    <Style TargetType="{x:Type Button}" x:Key="WindowCloseButtonStyle">
        <Setter Property="Background" Value="{StaticResource CloseButton.Static.Background}"/>
        <Setter Property="Foreground" Value="{StaticResource CloseButton.Static.Foreground}"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Margin="0" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource CloseButton.MouseOver.Background}"/>
                <Setter Property="Foreground" Value="{StaticResource CloseButton.MouseOver.Foreground}"/>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource CloseButton.MouseDown.Background}"/>
                <Setter Property="Foreground" Value="{StaticResource CloseButton.MouseDown.Foreground}"/>
            </Trigger>

            <!--<Trigger Property="Window.IsActive" Value="False">
                <Setter Property="Background" Value="{StaticResource CloseButton.Inactive.Background}"/>
            </Trigger>-->
        </Style.Triggers>
    </Style>


    <Style TargetType="local:CFWindow">
        <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality"/>
        <Setter Property="Title" Value="{Binding Title}"/>
        <Setter Property="Background" Value="White"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CFWindow}">

                    <Border x:Name="WindowFrame">
                        <Grid>

                            <!-- Window Titlebar -->
                            <DockPanel VerticalAlignment="Top" LastChildFill="True">
                                <Image x:Name="WindowIcon" DockPanel.Dock="Left" Source="{TemplateBinding Icon}" Width="16" Height="16" HorizontalAlignment="Left" VerticalAlignment="Top"/>

                                <StackPanel x:Name="WindowButtons" DockPanel.Dock="Right" VerticalAlignment="Top" WindowChrome.IsHitTestVisibleInChrome="True" Orientation="Horizontal">
                                    <Button x:Name="WindowMinimize" Style="{StaticResource WindowButtonStyle}" Margin="{Binding CFMinimiseButtonMargin}" Width="{Binding CFMinimiseButtonWidth}" Padding="0,8,0,0">
                                        <Path Stroke="{Binding ElementName=WindowMinimize, Path=Foreground}" Data="M0.5,0.5L9.5,0.5"/>
                                    </Button>

                                    <Button x:Name="WindowMaximize" Style="{StaticResource WindowButtonStyle}" Margin="{Binding CFMaximiseButtonMargin}" Width="{Binding CFMaximiseButtonWidth}">
                                        <Path Stroke="{Binding ElementName=WindowMaximize, Path=Foreground}" Data="M0.5,0.5L9.5,0.5 9.5,9.5 0.5,9.5z"/>
                                    </Button>

                                    <Button x:Name="WindowRestore" Style="{StaticResource WindowButtonStyle}" Margin="{Binding CFMaximiseButtonMargin}" Width="{Binding CFMaximiseButtonWidth}" Visibility="Collapsed">
                                        <Path Stroke="{Binding ElementName=WindowRestore, Path=Foreground}"
                                              Data="M7.5,7.5L7.5,7.5 7.5,9.5 0.5,9.5 0.5,2.5 2.5,2.5 M2.5,0.5L9.5,0.5 9.5,7.5 7.5,7.5 7.5,2.5 2.5,2.5 2.5,2.5z"/>
                                    </Button>

                                    <Button x:Name="WindowClose" Style="{StaticResource WindowCloseButtonStyle}" Margin="{Binding CFCloseButtonMargin}" Width="{Binding CFCloseButtonWidth}">
                                        <Path Stroke="{Binding ElementName=WindowClose, Path=Foreground}" Data="M10,0L0,10 M10,10L0,0"/>
                                    </Button>
                                </StackPanel>

                                <TextBlock x:Name="WindowTitle" Text="{TemplateBinding Title}" Foreground="{Binding CFTitleForeground}" TextAlignment="{Binding CFTitleTextAlignment}" TextTrimming="CharacterEllipsis" VerticalAlignment="Top" Panel.ZIndex="0" FontSize="{Binding CFTitleFontSize}"/>
                            </DockPanel>

                            <!-- Window Content -->
                            <Border x:Name="WindowContent" Panel.ZIndex="10" BorderThickness="1" Background="{TemplateBinding Background}">
                                <ContentPresenter/>
                            </Border>

                        </Grid>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome GlassFrameThickness="1" ResizeBorderThickness="8" CaptionHeight="23"/>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>